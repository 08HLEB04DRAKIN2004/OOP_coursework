// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OOP.DAL;

#nullable disable

namespace OOP.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231225095933_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OOP.Domain.Entity.Client", b =>
                {
                    b.Property<int>("Client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contact_information")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contract")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Client_id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("OOP.Domain.Entity.Department", b =>
                {
                    b.Property<int>("department_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("department_id");

                    b.ToTable("department");
                });

            modelBuilder.Entity("OOP.Domain.Entity.Employee", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("departament_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("salary")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("employee_id");

                    b.HasIndex("departament_id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("OOP.Domain.Entity.EmployeeInProject", b =>
                {
                    b.Property<int>("assignment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("assignment_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("project_id");

                    b.HasIndex("role_id");

                    b.ToTable("employeesInProject");
                });

            modelBuilder.Entity("OOP.Domain.Entity.MediaResource", b =>
                {
                    b.Property<int>("resource_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("resource_id");

                    b.HasIndex("project_id");

                    b.ToTable("mediaResources");
                });

            modelBuilder.Entity("OOP.Domain.Entity.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Order_id");

                    b.HasIndex("Client_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OOP.Domain.Entity.Project", b =>
                {
                    b.Property<int>("project_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description_")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("status_")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("project_id");

                    b.HasIndex("order_id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("OOP.Domain.Entity.ProjectRole", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("role_id");

                    b.ToTable("projectRoles");
                });

            modelBuilder.Entity("OOP.Domain.Entity.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            user_id = 1,
                            Email = "g_drakin@mail.ru",
                            Name = "Admin",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            PhoneNumber = "803335876",
                            Role = 2
                        },
                        new
                        {
                            user_id = 2,
                            Email = "g_drakin@mail.ru",
                            Name = "Moderator",
                            Password = "481f6cc0511143ccdd7e2d1b1b94faf0a700a8b49cd13922a70b5ae28acaa8c5",
                            PhoneNumber = "803335876",
                            Role = 1
                        });
                });

            modelBuilder.Entity("OOP.Domain.Entity.Employee", b =>
                {
                    b.HasOne("OOP.Domain.Entity.Department", "department")
                        .WithMany()
                        .HasForeignKey("departament_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("OOP.Domain.Entity.EmployeeInProject", b =>
                {
                    b.HasOne("OOP.Domain.Entity.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OOP.Domain.Entity.Project", "Project")
                        .WithMany()
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OOP.Domain.Entity.ProjectRole", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OOP.Domain.Entity.MediaResource", b =>
                {
                    b.HasOne("OOP.Domain.Entity.Project", "project")
                        .WithMany()
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");
                });

            modelBuilder.Entity("OOP.Domain.Entity.Order", b =>
                {
                    b.HasOne("OOP.Domain.Entity.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OOP.Domain.Entity.Project", b =>
                {
                    b.HasOne("OOP.Domain.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
